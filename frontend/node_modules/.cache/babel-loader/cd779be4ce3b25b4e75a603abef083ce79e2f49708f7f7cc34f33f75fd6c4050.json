{"ast":null,"code":"var _jsxFileName = \"/Claude-code-cmg/loan-performance-dashboard/frontend/src/components/charts/DoughnutChart.js\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { colors } from './ChartSetup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoughnutChart = ({\n  data,\n  title = \"Doughnut Chart\",\n  height = 300,\n  showLabels = true,\n  className = \"\"\n}) => {\n  if (!data || !data.labels || !data.datasets) {\n    console.warn('DoughnutChart: Invalid data provided');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `h-${height / 4} flex items-center justify-center bg-gray-100 rounded-lg ${className}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm\",\n          children: \"No data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n  const defaultColors = [colors.primary.main, colors.success.main, colors.warning.main, colors.danger.main, colors.purple.main, colors.gray.main];\n  const chartData = {\n    labels: data.labels,\n    datasets: data.datasets.map((dataset, index) => ({\n      label: dataset.label,\n      data: dataset.data,\n      backgroundColor: dataset.backgroundColor || defaultColors,\n      borderColor: dataset.borderColor || '#ffffff',\n      borderWidth: 2,\n      hoverBorderWidth: 3\n    }))\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: showLabels,\n        position: 'right',\n        labels: {\n          usePointStyle: true,\n          padding: 20,\n          font: {\n            family: 'Inter, system-ui, sans-serif',\n            size: 12\n          },\n          generateLabels: chart => {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              return data.labels.map((label, i) => {\n                const dataset = data.datasets[0];\n                const backgroundColor = Array.isArray(dataset.backgroundColor) ? dataset.backgroundColor[i] : dataset.backgroundColor;\n                const value = dataset.data[i];\n                const total = dataset.data.reduce((sum, val) => sum + val, 0);\n                const percentage = (value / total * 100).toFixed(1);\n                return {\n                  text: `${label} (${percentage}%)`,\n                  fillStyle: backgroundColor,\n                  strokeStyle: backgroundColor,\n                  pointStyle: 'circle'\n                };\n              });\n            }\n            return [];\n          }\n        }\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          family: 'Inter, system-ui, sans-serif',\n          size: 16,\n          weight: '600'\n        },\n        color: '#1F2937',\n        padding: 20\n      },\n      tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        titleColor: 'white',\n        bodyColor: 'white',\n        borderColor: 'rgba(255, 255, 255, 0.1)',\n        borderWidth: 1,\n        cornerRadius: 8,\n        font: {\n          family: 'Inter, system-ui, sans-serif'\n        },\n        callbacks: {\n          label: function (context) {\n            const label = context.label || '';\n            const value = context.parsed;\n            const total = context.dataset.data.reduce((sum, val) => sum + val, 0);\n            const percentage = (value / total * 100).toFixed(1);\n            return `${label}: ${value} (${percentage}%)`;\n          }\n        }\n      }\n    },\n    cutout: '60%',\n    elements: {\n      arc: {\n        borderRadius: 4\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative ${className}`,\n    style: {\n      height: `${height}px`\n    },\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","Doughnut","colors","jsxDEV","_jsxDEV","DoughnutChart","data","title","height","showLabels","className","labels","datasets","console","warn","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultColors","primary","main","success","warning","danger","purple","gray","chartData","map","dataset","index","label","backgroundColor","borderColor","borderWidth","hoverBorderWidth","options","responsive","maintainAspectRatio","plugins","legend","display","position","usePointStyle","padding","font","family","size","generateLabels","chart","length","i","Array","isArray","value","total","reduce","sum","val","percentage","toFixed","text","fillStyle","strokeStyle","pointStyle","weight","color","tooltip","titleColor","bodyColor","cornerRadius","callbacks","context","parsed","cutout","elements","arc","borderRadius","style","_c","$RefreshReg$"],"sources":["/Claude-code-cmg/loan-performance-dashboard/frontend/src/components/charts/DoughnutChart.js"],"sourcesContent":["import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { colors } from './ChartSetup';\n\nconst DoughnutChart = ({ \n  data, \n  title = \"Doughnut Chart\", \n  height = 300,\n  showLabels = true,\n  className = \"\"\n}) => {\n  if (!data || !data.labels || !data.datasets) {\n    console.warn('DoughnutChart: Invalid data provided');\n    return (\n      <div className={`h-${height/4} flex items-center justify-center bg-gray-100 rounded-lg ${className}`}>\n        <div className=\"text-gray-500 text-center\">\n          <div className=\"text-sm\">No data available</div>\n        </div>\n      </div>\n    );\n  }\n\n  const defaultColors = [\n    colors.primary.main,\n    colors.success.main,\n    colors.warning.main,\n    colors.danger.main,\n    colors.purple.main,\n    colors.gray.main\n  ];\n\n  const chartData = {\n    labels: data.labels,\n    datasets: data.datasets.map((dataset, index) => ({\n      label: dataset.label,\n      data: dataset.data,\n      backgroundColor: dataset.backgroundColor || defaultColors,\n      borderColor: dataset.borderColor || '#ffffff',\n      borderWidth: 2,\n      hoverBorderWidth: 3,\n    }))\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: showLabels,\n        position: 'right',\n        labels: {\n          usePointStyle: true,\n          padding: 20,\n          font: {\n            family: 'Inter, system-ui, sans-serif',\n            size: 12\n          },\n          generateLabels: (chart) => {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              return data.labels.map((label, i) => {\n                const dataset = data.datasets[0];\n                const backgroundColor = Array.isArray(dataset.backgroundColor) \n                  ? dataset.backgroundColor[i] \n                  : dataset.backgroundColor;\n                \n                const value = dataset.data[i];\n                const total = dataset.data.reduce((sum, val) => sum + val, 0);\n                const percentage = ((value / total) * 100).toFixed(1);\n                \n                return {\n                  text: `${label} (${percentage}%)`,\n                  fillStyle: backgroundColor,\n                  strokeStyle: backgroundColor,\n                  pointStyle: 'circle'\n                };\n              });\n            }\n            return [];\n          }\n        }\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          family: 'Inter, system-ui, sans-serif',\n          size: 16,\n          weight: '600'\n        },\n        color: '#1F2937',\n        padding: 20\n      },\n      tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        titleColor: 'white',\n        bodyColor: 'white',\n        borderColor: 'rgba(255, 255, 255, 0.1)',\n        borderWidth: 1,\n        cornerRadius: 8,\n        font: {\n          family: 'Inter, system-ui, sans-serif'\n        },\n        callbacks: {\n          label: function(context) {\n            const label = context.label || '';\n            const value = context.parsed;\n            const total = context.dataset.data.reduce((sum, val) => sum + val, 0);\n            const percentage = ((value / total) * 100).toFixed(1);\n            return `${label}: ${value} (${percentage}%)`;\n          }\n        }\n      }\n    },\n    cutout: '60%',\n    elements: {\n      arc: {\n        borderRadius: 4\n      }\n    }\n  };\n\n  return (\n    <div className={`relative ${className}`} style={{ height: `${height}px` }}>\n      <Doughnut data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default DoughnutChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}